#!/bin/bash

# Run the proper commands for executing a constituent solver on a given COP.

SOLVER=$1
MZN=$2
DZN=$3
FZN=$4
OZN=$5
OUT=$6

OUTPIT_SCRIPT="$SUNNY_HOME/src/output_script"
SOLVERS_DIR="$SUNNY_HOME/solvers"

# No .dzn file is provided.
if 
  [ "$DZN" == 'NODATA' ]
then
  DZN=''
fi

# For each constituent solver execute the corresponding commands: first the .mzn 
# is converted to the specific .fzn, and then the .fzn is run. 
# FIXME: Note that currently the output of each solver is 'commented' (by 
# prepending a % character) and redirected to a file using tee, for later being 
# properly processed by sunny-cp.

################################################################
# Commands to run the solvers of the MiniZinc suite
################################################################
if
  [ $SOLVER == "g12cbc" ]
then
  mzn2fzn -G linear $MZN $DZN -o $FZN --output-ozn-to-file $OZN
  ret=$?
  if 
    [ $ret -ne 0 ]
  then
    echo "MiniZinc model not converted!" >&2
    exit $ret
  fi
  unbuffer flatzinc -a -b mip $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
elif
  [ $SOLVER == "g12cpx" ]
then
  mzn2fzn -G g12_cpx $MZN $DZN -o $FZN --output-ozn-to-file $OZN
  ret=$?
  if 
    [ $ret -ne 0 ]
  then
    echo "MiniZinc model not converted!" >&2
    exit $ret
  fi
  unbuffer fzn_cpx -a $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
elif
  [ $SOLVER == "g12fd" ]
then
  mzn2fzn -G g12_fd $MZN $DZN -o $FZN --output-ozn-to-file $OZN
  ret=$?
  if 
    [ $ret -ne 0 ]
  then
    echo "MiniZinc model not converted!" >&2
    exit $ret
  fi
  unbuffer flatzinc -a $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
elif
  [ $SOLVER == "g12lazyfd" ]
then
  mzn2fzn -G g12_lazyfd $MZN $DZN -o $FZN --output-ozn-to-file $OZN
  ret=$?
  if 
    [ $ret -ne 0 ]
  then
    echo "MiniZinc model not converted!" >&2
    exit $ret
  fi
  unbuffer flatzinc -a -b lazy $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN  
else 
################################################################
# Commands to run other solvers of the MiniZinc suite
################################################################
  SOLVER_DIR=$SOLVERS_DIR/$SOLVER
  
  if [ ! -f "$SOLVER_DIR/fzn-exec" ]; then
    echo "The solver $SOLVER/fzn-exec was not found. Please verify its installation." >&2
    exit 1
  fi
  
  MZNLIB=""
  STDLIB=""
  
  if [ -d "$SOLVER_DIR/mzn-lib" ]; then
    MZNLIB="-I $SOLVER_DIR/mzn-lib"
  fi
  
  if [ -d "$SOLVER_DIR/stdlib" ]; then
    STDLIB="-I $SOLVER_DIR/stdlib"
  fi
  
  mzn2fzn $MZNLIB $STDLIB $MZN $DZN -o $FZN --output-ozn-to-file $OZN
  ret=$?
  if 
    [ $ret -ne 0 ]
  then
    echo "MiniZinc model not converted!" >&2
    exit $ret
  fi
  unbuffer $SOLVER_DIR/fzn-exec -a $FZN | tee $OUT | $OUTPIT_SCRIPT $OZN
fi

# elif
#   [ $SOLVER == "g12gurobi" ]
# then
#   mznlib=$HOME"/solvers/g12gur/lib/minizinc/linear"
#   stdlib=$HOME"/solvers/g12gur/lib/minizinc/std"
#   flatzinc=$HOME"/solvers/g12gur/bin/flatzinc"
#   
#   ret=$?
#   if 
#     [ $ret -ne 0 ]
#   then
#     echo "MiniZinc model not converted!" >&2
#     exit $ret
#   fi
#   unbuffer flatzinc -a -b mip $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
# 
# elif
#   [ $SOLVER == "gecode" ]
# then
#   MZNLIB=$HOME'/solvers/gecode-4.2.1/gecode/flatzinc/mznlib'
#   mzn2fzn $MZN $DZN -I $MZNLIB -o $FZN --output-ozn-to-file $OZN
#   ret=$?
#   if 
#     [ $ret -ne 0 ]
#   then
#     echo "MiniZinc model not converted!" >&2
#     exit $ret
#   fi
#   unbuffer fzn-gecode -a $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
# elif
#   [ $SOLVER == "minisatid" ]
# then
#   mzn2fzn $MZN $DZN -o $FZN --output-ozn-to-file $OZN
#   ret=$?
#   if 
#     [ $ret -ne 0 ]
#   then
#     echo "MiniZinc model not converted!" >&2
#     exit $ret
#   fi
#   unbuffer minisatid -a -f=fz $FZN |  tee $OUT | $OUTPIT_SCRIPT $OZN
# # NOTE: Here is possible to add another constituent solver.
# # elif
# #   [ $SOLVER == "<solver name>" ]
# # then
# #   MZNLIB=<global redefinitions>
# #   mzn2fzn $MZN $DZN -I $MZNLIB -o $FZN --output-ozn-to-file $OZN
# #   ret=$?
# #   if 
# #     [ $ret -ne 0 ]
# #   then
# #     echo "MiniZinc model not converted!" >&2
# #     exit $ret
# #   fi
# #   unbuffer <solver command> -a $FZN | tee $OUT | $OUTPIT_SCRIPT $OZN
# else
#   echo "Error: undefined solver!" >&2
#   exit 1
# fi
